########### REPORT GENERATION FUNCTION FOR TPT ###############

#### PACKAGES REQUIRED #####
library(dplyr) # For Data Manipulation
library(psych) 
library(fmsb) # For Polar Graph
library(rio) # for exporting data to excel prior to mailmerge
library(ggplot2)
set.seed(100)

#### CREATION OF DATASET ####


#Create 104 Soldiers
Name <- c("Ali", "Abb", "Ace","Bob","Ben", "Bil","Chan", "Cam", "Cas",
          "Don", "Doc","Dee","Ed", "Ela", "Ell","Fran", "Flo", "Fay",
          "Gal", "Gus", "Gia","Han", "Hue", "Hal","Ira", "Ivy", "Ian","Jon", "Jay", "Jil",
          "Kim", "Kia", "Kai","Leo", "Lou", "Liz","Mia", "Mya", "Mat", "Nat", "Noa", "Nan",
          "Orr", "Osa", "Ora","Pol", "Pam", "Pat","Qin", "Qiv", "Qwe","Rod", "Ray", "Raj",
          "Sam", "Sid", "Sia","Tim", "Tia", "Tad","Uma", "Url", "Udi","Vic", "Val", "Van",
          "Wil", "Wyn", "Woa","Xi", "Xia", "Xou","Yui", "Yee", "Yin","Zac", "Zoe", "Zel",
          "Axl", "Bud", "Cal","Dax", "Eae", "Fae", "Gru", "Hoy", "Imo", "Jak", "Kyl", "Lea", "Moa", "Nik",
          "Oz", "Pit", "Qa", "Ray", "Sky", "Tan", "Uri", "Vo", "Wit", "Xoa", "Yoo", "Zin")
# Add z-score Personality Data for x, y, x dimensions. 
a <- rnorm(104, mean=0, sd=1)
b <- rnorm(104, mean=0, sd=1)
c <- rnorm(104, mean=0, sd=1)
x <- rnorm(104, mean=0, sd=1)
y <- rnorm(104, mean=0, sd=1)
z <- rnorm(104, mean=0, sd=1)
#Create team variable with 11 teams where 11th is R for Recruits needing placement
# no recruits for this iteration - we only need full teams. 
Team <- c(rep(LETTERS[1:26],4)) 

df<-data.frame(Name,a,b,c,x,y,z,Team)
df$Team <-as.factor(df$Team)
#Take a look at the set
str(df)
describe(df[,2:7])
# Look at how groups compare on their scores. 
df %>% group_by(Team) %>% summarize(mean.a = mean(a),
                                    mean.b = mean(b),
                                    var.c = var(c),
                                    mean.x= mean(x),
                                    skw.y = skew(y),
                                    var.z = var(z))
###########

#establish beta weights from dist-process predictions

morale_beta <- .7 # xmean
motivation_beta <- .30 # xmean
conflict_beta <- .4 # xmean
backup_beta <- .75 # yskew
sysawareness_beta <- .30 # yskew
coord_beta <- .35 # zvar
strategizing_beta <- .45 # zvar
goalsetting_beta <- .60 # zvar

morale_beta2 <- .3 # amean
motivation_beta2 <- .15 # bmean
conflict_beta2 <- .2 # cvar
backup_beta2 <- .35 # amean
sysawareness_beta2 <- .15 # bmean
coord_beta2 <- .18 # cvar
strategizing_beta2 <- .22 # amean
goalsetting_beta2 <- .3 # bmean


#Create predicted scores on team process outcomes
df <- df %>% group_by(Team) %>%
  mutate(
    Morale = morale_beta*mean(x) +morale_beta2*mean(a),
    Motivation =motivation_beta*mean(x)+motivation_beta2*mean(b),
    Conflict = conflict_beta*mean(x)+conflict_beta2*var(c),
    Backup = conflict_beta*skew(y)+backup_beta2*mean(a),
    SysAwareness = sysawareness_beta*skew(y)+sysawareness_beta2*mean(b),
    Coordination = coord_beta*var(z)+coord_beta2*var(c),
    Strategizing = strategizing_beta*var(z)+strategizing_beta2*mean(a),
    GoalSetting = goalsetting_beta*var(z) +goalsetting_beta2*mean(b)
    
  )


######Add percentile rankings for each of the strs and wks. ####

#df<-df %>% filter(Team != "Recruits")
df$r.Morale<- (rank(df$Morale)/length(df$Morale))*100
df$r.Motivation <-(rank(df$Motivation)/length(df$Motivation))*100
df$r.Conflict <-(rank(df$Conflict)/length(df$Conflict))*100
df$r.Backup <-(rank(df$Backup)/length(df$Backup))*100
df$r.SysAwareness <- (rank(df$SysAwareness)/length(df$SysAwareness))*100
df$r.Coordination <- (rank(df$Coordination)/length(df$Coordination))*100
df$r.Strategizing <- (rank(df$Strategizing)/length(df$Strategizing))*100
df$r.GoalSetting <- (rank(df$GoalSetting)/length(df$GoalSetting))*100

glimpse(df)



##### STRENGTH FINDER FUNCTION ######

### create list p.list ###
p.list <- c("Morale", "Motivation", "Conflict",
            "Backup", "SysAwareness",
            "Coordination", "Strategizing", "GoalSetting")
df.z <-data.frame()
df.strwk <- data.frame()
strwkfunc <- function(Tm) {
  df.i <-df %>%
    filter(Team == Tm) %>%
    sample_n(1) %>% 
    select(r.Morale, r.Motivation, r.Conflict,
           r.Backup, r.SysAwareness, r.Coordination, 
           r.Strategizing, r.GoalSetting)
  t.df.i <- t(df.i)
  p.i <-t.df.i[-1] %>% as.numeric()
  df.i.p <- data.frame(p.i,p.list)
  df.i.p <- df.i.p[order(df.i.p$p.i),]
  df.i.strwk <- data.frame(
    str1 = df.i.p[8,2],
    str2 = df.i.p[7,2],
    str3 = df.i.p[6,2],
    wk1 = df.i.p[1,2],
    wk2 = df.i.p[2,2],
    wk3 = df.i.p[3,2]
  )
  df.z <- df %>% filter(Team==Tm) %>%
    mutate(
      str1 = df.i.strwk$str1,
      str2 = df.i.strwk$str2,
      str3 = df.i.strwk$str3,
      wk1 = df.i.strwk$wk1,
      wk2 = df.i.strwk$wk2,
      wk3 = df.i.strwk$wk3
    )
  glimpse(df.z)
  return(df.z)
  #df.strwk <- bind_rows(df.strwk,df.z)
  #glimpse(df.strwk)
  #return(df.strwk)
}

##TEST STRENGTHFINDER FUNCTION
strwkfunc('A')[1,25:30]
strwkfunc('B')[1,25:30]
strwkfunc('C')[1,25:30]

##initialize datalist##
datalist <- c()

for (i in 1:26){
  dat <-strwkfunc(unique(df$Team[i]))
  datalist[[i]] <-dat
}
big_data <-bind_rows(datalist)
df <- big_data
glimpse(df)


### STR AND WK REPORT SCRIPTS ####

#Strength Report Text 
str.morale.text <- "Maintaining positivity and esprit de corps is easier for teams with this profile. This team has an edge in maintaining positive moods and an optimistic outlook."
str.motivation.text <- "Teams with this profile sustain attention to the task at hand. This team has an edge in seeing tasks through to completion and maintaining motivation until the work is done."
str.conflict.text <- "Conflict resolution comes more easily to teams with this personality profile. This team is more likely to create a healthy context for staging disagreements and premptively engages conflicts before they erupt into crises."
str.backup.text <- "Teams with this profile maintain awareness of their teammates' efforts. They offer support, backup temmates, and coach newcomers when they see the opportunity."
str.sysawareness.text <- "Teams with this profile stay alert to how team resources are allocated. They stay aware of their equipment's status and supply levels."
str.coord.text <- "Teams witht his profile communicate and synchronize their efforts more easily than other teams. This team profile favors effective coordination."
str.strat.text <- "Understanding the mission comes more easily to teams with this personality profile. These teams ensure everyone is on the same page."
str.goalset.text <- "Clear team goals and goal communication are more common in teams with this profile. Effective goal setting unifies efforts and leads to results."


#Weakness Report Text
wk.morale.text <- "Teams with this profile tend to have lower morale than others. Maintaining positivty and healthy esprit de corps may require deliberate effort. Resoruces for morale building can be found in ATP 6-22.6, Chapter 1."
wk.motivation.text <- "Maintaining motivation throughout a task is harder for teams with this personality profile. Leadership and team members may need extra effort to avoid boredom or distraction."
wk.conflict.text <- "Team conflict is more common in teams with this profiele. Preemptively address sources of disagreement and create conditions for healthy conflict resolution to keep conflicts from escalating. Consider reviewing conflict management tactics in ATP 6-22.6."
wk.backup.text <- "Teams with this profile are less inclined to offer task support to fellow members, provide coaching, or complete tasks on anothers behalf. Consider reviewing the coaching resources in FM 6-22 to help develop a culture of learning."
wk.sysawareness.text <- "Teams with this profile tend to be less aware of the state of equipment and resources necessary to complete a task. Developing that awareness may require additional effort."
wk.coord.text <- "Teams with this profile struggle to syncrhonize effort or communicate effectively during task completion than other teams. Developing skills in coordination may require additional effort."
wk.strat.text <- "Teams with this profile report more difficulty planning operations or setting contingencies. Planning for unexpected events may come less naturally to this team. Resources to develop the team's ability to strategize can be found in FM 5-0."
wk.goalset.text <- "Teams with this profile report challenges in setting clear goals and often fail to understand how they connect to the team's overall mission. FM 5-0 provides tools to help teams plan and stay on the same page."


##STR REPORT FUNCTION##
strreportfun<- function(x){
  if(x == 'Morale'){str.morale.text} else
    if(x == 'Motivation'){str.motivation.text}else
      if(x == 'Conflict'){str.conflict.text}else
        if(x == 'Backup'){str.backup.text}else
          if(x == 'SysAwareness'){str.sysawareness.text}else
            if(x == 'Coordination'){str.coord.text}else
              if(x == 'Strategizing'){str.strat.text}else
                if(x == 'GoalSetting'){str.goalset.text}else
                  FALSE
}
##WK REPORT FUNCTION##
wkreportfun <- function(x){
  if(x == 'Morale'){wk.morale.text} else
    if(x == 'Motivation'){wk.motivation.text}else
      if(x == 'Conflict'){wk.conflict.text}else
        if(x == 'Backup'){wk.backup.text}else
          if(x == 'SysAwareness'){wk.sysawareness.text}else
            if(x == 'Coordination'){wk.coord.text}else
              if(x == 'Strategizing'){wk.strat.text}else
                if(x == 'GoalSetting'){wk.goalset.text}else
                  FALSE
}

## CREATE STR AND WK REPORTS AS VARIABLES ##

str1reportfun <- function(Tm) {
  df.i <- filter(df, Team == Tm) 
  print(df.i[1,]$str1report)
}


str2reportfun <- function(Tm) {
  df.i <- filter(df, Team == Tm) 
  print(df.i[1,]$str2report)
}


str3reportfun <- function(Tm) {
  df.i <- filter(df, Team == Tm) 
  print(df.i[1,]$str3report)
}


wk1reportfun <- function(Tm) {
  df.i <- filter(df, Team == Tm) 
  print(df.i[1,]$wk1report)
}

wk2reportfun <- function(Tm) {
  df.i <- filter(df, Team == Tm) 
  print(df.i[1,]$wk2report)
}

wk3reportfun <- function(Tm) {
  df.i <- filter(df, Team == Tm) 
  print(df.i[1,]$wk3report)
}

df$str1report <- sapply(df$str1,strreportfun)
df$str2report <- sapply(df$str2,strreportfun)
df$str3report <- sapply(df$str3,strreportfun)

df$wk1report <-sapply(df$wk1,wkreportfun)
df$wk2report <-sapply(df$wk2,wkreportfun)
df$wk3report <-sapply(df$wk3,wkreportfun)



### TOTAL REPORT FUNCTION ####

totalreport <- function(Tm){
  df.i <- filter(df,Team == Tm) %>% sample_n(1)
  print("Report for Team")
  polar(Tm)
  print("TEAM STRENGTHS")
  print(df.i$str1report)
  print(df.i$str2report)
  print(df.i$str3report)
  print("TEAM WEAKNESSES")
  print(df.i$wk1report)
  print(df.i$wk2report)
  print(df.i$wk3report)
}
totalreport('C')


###### POLAR GRAPH CREATION ######

polar <- function(Tm){
  df.Team <- df %>% filter(Team == Tm) %>% sample_n(1)
  data <- t(matrix(c(df.Team$r.Morale, df.Team$r.Motivation, df.Team$r.Conflict, 
                     df.Team$r.Backup, df.Team$r.SysAwareness, df.Team$r.Coordination,
                     df.Team$r.Strategizing, df.Team$r.GoalSetting)))
  # Name COlumns attributes of the TAPAS dataset
  colnames(data) <- c("Morale", "Motivation", "Conflict Mngmt",
                      "Backup", "Sys Awareness", "Coordination",
                      "Strategizing", "Goal Setting")
  #Convert to dataframe
  data<-as.data.frame(data)
  
  # To use fmsb package you must add two rows that describe describe the min and max 
  data <- rbind(
    #add row to set maximum with length of data vector
    rep(100,8),
    #add row to set minimum with length of data vector
    rep(0,8), 
    #add the dataframe data after the above
    data)
  
  # Customize Radarchart 
  radarchart(data, axistype = 1,
             pcol=rgb(.2,.5,.5,.9), pfcol = rgb(.2,.5,.5,.7), plwd =4,
             cglcol = "gray", cglty = 1, axislabcol = "gray", caxislabel= seq(0,100,25),
             cglwd = .8, # thickness of webs
             vlcex = 1.5 # label size.
  )
}

polar('G')
# #### test polar function
# 
# polar('A')
# polar('C')
# polar('D')

##### Polar Print Function ##### 
polar.png <-function(Tm){
  png(file=paste("O:\FSRU\RACO\Applied Research\Projects\Team Personality and Teamwork\09. Stakeholder Documents\Team Personality Reports", Tm, "_chart.png", sep = ""),
      width = 600, height = 550)
  polar(Tm)
  dev.off()
}
polar.png("C")
polar.png("G")

for (i in 1:length(unique(df$Team))){
  polar.png(paste(LETTERS[i]))
}


####### Plotting function #####

strwkplotfunc<- function(Tm){
  df.i <-df %>% filter(Team == Tm) %>%
    sample_n(1) %>% 
    select(r.Morale, r.Motivation, r.Conflict,
           r.Backup, r.SysAwareness, r.Coordination, 
           r.Strategizing, r.GoalSetting)
  t.df.i <- t(df.i)
  p.i <-t.df.i[-1] %>% as.numeric()
  df.i.p <- data.frame(p.i,p.list)
  df.i.p <- df.i.p[order(df.i.p$p.i),]
  df.strwk <- rbind(head(df.i.p,3),tail(df.i.p,3))
  df.strwk$p.list <-factor(df.strwk$p.list,
                           levels = df.strwk$p.list[order(df.strwk$p.i)])
  df.strwk <- df.strwk %>%  mutate(
    index= 1:nrow(df.strwk),
    cat = as.factor(case_when(index >3 ~ 'Strength',
                              TRUE ~ 'Weakness'))
  )
  
  ###str plot
  strwkplot<- ggplot(df.strwk, aes(x = p.list, y = p.i+5, fill = cat)) + # added +5 for formatting on low value cases 
    geom_col()+
    scale_fill_manual(values=c("#235a4f", "#45B39D"))+
    coord_flip()+
    theme_void()+
    geom_text(aes(label=paste(round(p.i),"%",sep="")), 
              family = "sans",
              color = "white", 
              size = 3,
              position = position_stack(vjust=.5))+
    theme(legend.position = "none",
          axis.text.y = element_text(size = 7,
                                     family = "sans",
                                     hjust=0,
                                     face = "bold"),
          plot.title = element_text(size =5, 
                                    family = "sans",
                                    hjust=0),
          plot.caption = element_text()
    ) +
    ylim(c(0,105))
  plot(strwkplot)
}

strwkplotfunc("K")
strwkplotfunc("B")
for (i in 1:length(unique(df$Team))){
  strwkplotfunc(paste(LETTERS[i]))
}

###### Exporting Excel File #####


df.excel <- df %>% 
  group_by(Team) %>% 
  sample_n(1) %>% 
  select(Team, 
         str1,str1report, 
         str2, str2report,
         str3, str3report,
         wk1, wk1report,
         wk2, wk2report,
         wk3, wk3report)

df.excel$chartpath <- paste("O:\\FSRU\\RACO\\Applied Research\\Projects\\Team Personality and Teamwork\\09. Stakeholder Documents\\Team Personality Reports",unique(df$Team), "_chart.png", sep = "")
df.excel$strwkpath <-paste("O:\\FSRU\\RACO\\Applied Research\\Projects\\Team Personality and Teamwork\\09. Stakeholder Documents\\Team Personality Reports",unique(df$Team),"_strwk.png", sep = "")

glimpse(df.excel)

export(df.excel, "simulated_df.csv")



